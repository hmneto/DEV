@page "/autor/edita/{id:int}"
@inject HttpClient http
@inject NavigationManager NavManager

@if (autorViewModel != null)
{
    <form onsubmit="return false">
        <div class="form-group">
            <label for="exampleInputEmail1">Email address</label>
            <input type="text" @ref="inputElement" class="form-control" placeholder="Nome"
                   @bind-value="@autorViewModel.Nome" @bind-value:event="oninput">

        </div>
        <div class="form-group">
            <label for="exampleInputEmail1">Email address</label>
            <input type="text" class="form-control" placeholder="Pais"
                   @bind-value="@autorViewModel.Pais" @bind-value:event="oninput">

        </div>

        <button type="submit" @onclick="@SalvarAutor" class="btn btn-primary">Submit</button>
    </form>

}

@code{
    [Parameter]
    public int id { get; set; }
    public AutorViewModel autorViewModel { get; set; }
    public ElementReference inputElement { get; set; }
    public bool controle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AutorViewModel a = new AutorViewModel() { IdAutor = id };
        HttpResponseMessage autor = await http.PostAsJsonAsync("Autor/GetAutor", a);
        autorViewModel = await autor.Content.ReadFromJsonAsync<AutorViewModel>();
        controle = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (autorViewModel != null && controle == true)
        {
            await inputElement.FocusAsync();
            controle = false;
        }

    }


    public async void SalvarAutor()
    {
        await http.PostAsJsonAsync("Autor/ModifyAutor", autorViewModel);
        NavManager.NavigateTo("/autor");
    }


}