@page "/autor"
@inject HttpClient http


<NavLink class="nav-link" href="/autor/cadastro">
    <button class="btn btn-info">Cadastra Autor</button>
</NavLink>

@if (autorViewModel == null)
{
    <img src="https://media0.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=ecf05e478lp2rpvk9z9cx6fmh333u597cdp069894cpg9gbq&rid=giphy.gif" />
}
else if (!autorViewModel.Any<AutorViewModel>())
{
    <p>Cadastre </p>
}

else
{


    <table class="table table-bordered">
        <thead>
            <tr>
                <th>
                    Nome do Autor
                </th>

                <th>
                    Pais do Autor
                </th>

                <th>
                    Ações
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (AutorViewModel li in autorViewModel)
            {
                <tr>
                    <td>@li.Nome</td>
                    <td>@li.Pais</td>
                    <td>
                        <button @onclick="()=>ApagarAutor(li)" class="btn btn-danger">Apagar</button>

                        <NavLink href="@($"/autor/edita/{li.IdAutor}")">
                            <button class="btn btn-primary"> Modificar</button>
                        </NavLink>

                    </td>

                </tr>
            }

        </tbody>
    </table>
    <Confirma @ref="confirmacao" onCancela="CancelaConfirmacao" onConfirma="RemoverTarefaConfirmacao">
        <p>Deseja Excluir esta tarefa ?</p>
    </Confirma>
}
@code {
    public Confirma confirmacao { get; set; }
    public IList<AutorViewModel> autorViewModel { get; set; }
    public AutorViewModel _autorView { get; set; }
    protected override async Task OnInitializedAsync()
    {
        autorViewModel = await http.GetFromJsonAsync<IList<AutorViewModel>>("/Autor/GetAutores");
    }

    public void ApagarAutor(AutorViewModel autorView)
    {
        _autorView = autorView;
        confirmacao.Exibir();
    }


    public void CancelaConfirmacao()
    {
        _autorView = null;
        confirmacao.Ocultar();
    }

    public async Task RemoverTarefaConfirmacao()
    {
        confirmacao.Ocultar();
        HttpResponseMessage te = await http.PostAsJsonAsync("/Autor/DeleteAutor", _autorView);
        autorViewModel = await http.GetFromJsonAsync<IList<AutorViewModel>>("/Autor/GetAutores");
    }
}
