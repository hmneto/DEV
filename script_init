npx create-react-app dockerized-react-app
cd dockerized-react-app


docker build -t sample:dev .


docker run -v ${PWD}:/app -v /app/node_modules -p 3001:3000 --rm sample:dev


docker run -it -v ${PWD}:/app -v /app/node_modules -p 3001:3000 --rm sample:dev



docker-compose up -d --build



# build environment
FROM node:13-alpine as build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json /app/package.json
RUN npm install — silent
RUN npm install react-scripts@3.0.1 -g — silent
COPY . /app
RUN npm run build
# production environment
FROM nginx:1.16.0-alpine
COPY --from=build /app/build /usr/share/nginx/html
EXPOSE 80
CMD [“nginx”, “-g”, “daemon off;”]




docker build -f Dockerfile-prod -t sample:prod .



docker run -it -p 8080:80 --rm sample:prod



version: '3.7'
services:
app-prod:
    container_name: dockerized-react-app
    build:
      context: .
      dockerfile: Dockerfile-prod
    ports:
      - '8080:80'


docker-compose -f docker-compose-prod.yml up -d --build



RUN rm /etc/nginx/conf.d/default.conf
COPY nginx/nginx.conf /etc/nginx/conf.d



# build environment
FROM node:13-alpine as build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json /app/package.json
RUN npm install — silent
RUN npm install react-scripts@3.0.1 -g — silent
COPY . /app
RUN npm run build
# production environment
FROM nginx:1.16.0-alpine
COPY --from=build /app/build /usr/share/nginx/html
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx/nginx.conf /etc/nginx/conf.d
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]



server {
listen 80;
location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }
error_page   500 502 503 504  /50x.html;
location = /50x.html {
    root   /usr/share/nginx/html;
  }
}



#!/bin/bash
if [ $1 == "--dev" ]; then
    echo "Iniciando ambiente de desenvolvimento..."
    echo "Desconstruindo containers, caso existam..."
    docker-compose down
    echo "Construindo containers de desenvolvimento..."
    docker-compose up -d --build
fi
if [ $1 == "--prod" ]; then
    echo "Fazendo deploy em ambiente de Produção"
    
    echo "Desconstruindo containers, caso existam..."
    docker-compose -f docker-compose-prod.yml down
    echo "Construindo containers de desenvolvimento"
    docker-compose -f docker-compose-prod.yml up -d --build
fi




./run-app-deploy.sh --prod


chmod +x run-app-deploy.sh



