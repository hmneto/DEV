@page "/livro/cadastro"
@inject NavigationManager NavManager
@inject HttpClient http


@if (autorViewModel != null)
{
<form onsubmit="return false">
    <div class="form-group">
        <label for="exampleInputEmail1">Email address</label>
        <input type="text" class="form-control" placeholder="Nome" @ref="inputElement"
               @bind-value="@livroViewModel.NomeLivro" @bind-value:event="oninput">
    </div>

    <select class="form-control"  @onchange="oi">
        <option selected value="0">Open this select menu</option>
        @foreach (AutorViewModel autorView in autorViewModel)
        {
            <option value="@autorView.IdAutor">@autorView.Nome</option>
        }
    </select>



    <button type="submit" @onclick="@SalvaLivro" class="btn btn-primary">Submit</button>
</form>
}

@code{
    public LivroViewModel livroViewModel = new LivroViewModel();
    public IList<AutorViewModel> autorViewModel { get; set; }
    public ElementReference inputElement { get; set; }
    public bool controle { get; set; }
    protected override async Task OnInitializedAsync()
    {
        autorViewModel = await http.GetFromJsonAsync<IList<AutorViewModel>>("Autor/GetAutores");
        controle = true;
    }

    public async Task SalvaLivro()
    {
        if (livroViewModel.NomeLivro != "" && livroViewModel.IdAutorForeignKey != 0)
        {
            await http.PostAsJsonAsync("/Livro/SaveLivro", livroViewModel);
            NavManager.NavigateTo("/livro");
        }
    }

    private void oi(ChangeEventArgs e)
    {
        livroViewModel.IdAutorForeignKey = int.Parse(e.Value.ToString());
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (autorViewModel != null && controle == true)
        {
            await inputElement.FocusAsync();
            controle = false;
        }

    }
}